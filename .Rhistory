## More on R & Data Visualizaiton: Pt. 1
##
## Name: Lillian Zhao
## Date: Oct. 20, 2016
# Initial Settings --------------------------------------------------------
rm(list = ls())
options(stringsAsFactors = FALSE)
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(openxlsx)) #read.xlsx()
suppressPackageStartupMessages(library(gridExtra)) # arrangeGrob()
# Analysis 1 --------------------------------------------------------------
file <- "data/Total_Economic_and_Military_Assistance_1946-2014.xlsx"
GreenBook1 <- read.xlsx(file, sheet = 2, startRow = 7)
getwd()
setwd(/Users/lillianzhao/Documents/16F/QSS17/Session8)
setwd("/Users/lillianzhao/Documents/16F/QSS17/Session8")
getwd()
## Data Visualization
## Project 2: Quality of Government Data
##
## Name: Lillian Zhao
## Date: October 25, 2016
##
## Data used is QOG individual & country Expert data:
## "http://www.qogdata.pol.gu.se/data/qog_exp_ind_15.csv"
## "http://www.qogdata.pol.gu.se/data/qog_exp_agg_15.csv"
## Initial Settings -----------------------------------------------------
rm(list = ls())
library(tidyverse)
library(rworldmap)
library(gridExtra)
options(stringsAsFactors = FALSE)
indiv.data <- "http://www.qogdata.pol.gu.se/data/qog_exp_ind_15.csv"
country.data <- "http://www.qogdata.pol.gu.se/data/qog_exp_agg_15.csv"
# Tidy Data --------------------------------------------------------
df <- read.csv(indiv.data)
df.select <- df %>%
select(id, date, cname, wave,
q2_a, q2_b, q2_g, q2_h,
q6_a, q6_b, q6_c, q6_d, q6_e,
q8_g, q5_f, q5_g, q7, q9_a) %>%
rename(expert.id = `id`,
country = `cname`,
year = `wave`,
proff.q1 = `q2_a`,
proff.q2 = `q2_b`,
proff.q3 = `q2_g`,
proff.q4 = `q2_h`,
impar.q1 = `q8_g`,
impar.q2 = `q5_f`,
impar.q3 = `q5_g`,
impar.q4 = `q7`,
impar.q5 = `q9_a`,
women.in.general = `q6_a`,
women.senior = `q6_b`,
women.police = `q6_c`,
women.in.health = `q6_d`,
women.in.education = `q6_e`)
# rename.country <- function(df, old.name, new.name) {
#   ifelse(region == old.name, new.name, region)
#   }
df.women <- df.select %>%
select(expert.id, country, women.in.general, women.senior,
women.police, women.in.health, women.in.education) %>%
na.omit() %>%
group_by(country) %>%
summarise_at(vars(women.in.general, women.senior, women.police,
women.in.health, women.in.education), mean) %>%
rename(region = `country`) %>%
mutate(region = ifelse(region == "United States", "USA", region),
region = ifelse(region == "Cyprus (1975-)", "Cyprus", region),
region = ifelse(region == "Ethiopia (1993-)", "Ethiopa", region),
region = ifelse(region == "France (1963-)", "France", region),
region = ifelse(region == "Malaysia (1966-)", "Malaysia", region),
region = ifelse(region == "Sudan (2012-)", "Sudan", region),
region = ifelse(region == "Pakistan (1971-)", "Pakistan", region))
# Visualize $ of Women on Map -----------------------------------------------------------
world.map <- map_data(map = "world")
joined.data <- left_join(world.map, df.women, by = "region")
draw.graph <- function(column, title.string) {
ggplot() +
geom_map(data = world.map, map = world.map,
aes(map_id = region, x = long, y = lat), fill = "white") +
geom_map(data = joined.data, map = world.map,
aes_string(fill = column, map_id = "region")) +
scale_fill_gradient2(low = "red3", mid = "khaki",
high = "palegreen3", guide = "colourbar",
midpoint = 45) +
labs(title = title.string,
y = "",
x = "",
fill = "Percentage of Women") +
coord_equal()
}
plot.1 <- draw.graph("women.in.general", "Women in the Public Sector")
plot.2 <- draw.graph("women.senior", "Women in Senior Positions in Government")
plot.3 <- draw.graph("women.police", "Women in the Police Force")
plot.4 <- draw.graph("women.in.health", "Women in the Health Care System")
plot.5 <- draw.graph("women.in.education", "Women in Public Education")
grid.arrange(plot.1, plot.2, plot.3, plot.4, plot.5, ncol = 3,
top = "Percentage of Women in Different Sectors (per country)")
ggsave(filename = "figure/Project2_Fig1_LZhao.pdf", width = 10, height = 7.5)
getwd()
getwd()
setwd("/Users/lillianzhao/Documents/QSS 17/Project 2")
## Data Visualization
##
## Name: Lillian Zhao
## Date: Nov 1, 2016
rm(list = ls())
library()
untar("data/dataset.tar.bz2", exdir = ".")
df <- read.csv("dataset/survey/FlourishingScale.csv")
rm(list = ls())
library(ggplot2)
getwd()
library(tidyverse)
?geom_density2d()
?coord_fixed()
us_states <- usa_composite()
## combine a map
library(list = ls())
library(tidyverse)
library(maptools) #check rgeos avail
library(albersusa)
library(rgeos)
library(ggmap)
us_states <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips")
us_counties_data <- us_counties@data[, c("fips"), "population"]
us_counties_map <- left_join[us_counties_map,
us_counties_data,
by = c("id" = "fips")]
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips")
us_counties_data <- us_counties@data[, c("fips"), "population"]
us_counties_map <- left_join[us_counties_map,
us_counties_data,
by = c("id" = "fips")]
library(list = ls())
library(tidyverse)
library(ggmap)
library(albersusa)
library(sp)
library(rgeos)
library(maptools) #check rgeos avail
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips")
us_counties_data <- us_counties@data[, c("fips"), "population"]
us_counties_map <- left_join[us_counties_map,
us_counties_data,
by = c("id" = "fips")]
us_counties_data <- us_counties@data[, c("fips", "population")]
us_counties_map <- left_join[us_counties_map,
us_counties_data,
by = c("id" = "fips")]
View(us_counties_map)
View(us_counties_data)
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips") %>%
rename(fips = `id`)
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips") %>%
rename(fips = `id`)
us_counties_data <- us_counties@data[, c("fips", "population")]
us_counties_map <- left_join[us_counties_map,
us_counties_data,
by = "fips"]
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = c("id" = fips"))
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips"
us_counties_data <- us_counties@data[, c("fips", "population")]
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = c("id" = "fips"))
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips"
us_counties_data <- us_counties@data[, c("fips", "population")]
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = c("fips" = "id"))
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips"
us_counties_data <- us_counties$data[, c("fips", "population")]
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = c("id" = "fips"))
View(us_counties_map)
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips"
us_counties_data <- us_counties@data[, c("fips", "population")]
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = "fips")
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips"
us_counties_data <- us_counties@data[, c("fips", "population")]
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = "fips")
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips")
us_counties_data <- us_counties@data[, c("fips", "population")]
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = "fips")
ggplot() +
geom_map(data = us_counties_map,
map = data,
aes_string(x = "long",
y = "lat",
fill = variable,
map_id = "id"),
color = I("green"), size = 0.3)
ggplot() +
geom_map(data = us_counties_map,
map = us_counties_map,
aes_string(x = "long",
y = "lat",
fill = variable,
map_id = "id"),
color = I("green"), size = 0.3)
ggplot() +
geom_map(data = us_counties_map,
map = us_counties_map,
aes_string(x = "long",
y = "lat",
fill = "population",
map_id = "id"),
color = I("green"), size = 0.3)
## combine a map
rm(list = ls())
library(tidyverse)
library(ggmap)
library(albersusa)
library(sp)
library(rgeos)
library(maptools) #check rgeos avail
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips")
us_counties_data <- us_counties@data[, c("fips", "population")]
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = "fips")
ggplot() +
geom_map(data = us_counties_map,
map = us_counties_map,
aes_string(x = "long",
y = "lat",
fill = "population",
map_id = "id"),
color = I("green"), size = 0.3)
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = c("id" = "fips")
ggplot() +
geom_map(data = us_counties_map,
map = us_counties_map,
aes_string(x = "long",
y = "lat",
fill = "population",
map_id = "id"),
color = I("green"), size = 0.3)
## write some linear regression models
## continuous scale
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = c("id" = "fips")
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = c("id" = "fips"))
us_counties <- counties_composite()
us_counties_map <- fortify(us_counties, region = "fips")
us_counties_data <- us_counties@data[, c("fips", "population")]
us_counties_map <- left_join(us_counties_map,
us_counties_data,
by = c("id" = "fips"))
ggplot() +
geom_map(data = us_counties_map,
map = us_counties_map,
aes_string(x = "long",
y = "lat",
fill = "population",
map_id = "id"),
color = I("green"), size = 0.3)
## write some linear regression models
## continuous scale
install.packages("rmarkdown")
?life()
?split()
setwd("/Users/lillianzhao/Documents/Data Science/quinoa")
rm(list = ls())
library(tidyverse)
library(plotly)
library(reshape2)
library(stringr)
## Import files
df_export <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/FAOSTAT_data_10-31-2017-2.csv", header=TRUE, sep=",")
df_google <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/google_trends.csv", header=TRUE, sep=",")
df_google2 <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/what_is_google_trends.csv", header=TRUE, sep=",")
## Separate exportation volume data into countries
df_export_bolivia <- filter(df_export, Area.Code == 19)
df_export_bolivia
df_export_peru <- filter(df_export, Area.Code == 170)
df_export_peru
## Clean google data search by splitting the date into month & year
df_google["Year"] <- NA
df_google["Date"] <- df_google$Month
df_google$Month <- sapply(strsplit(as.character(df_google$Date),'-'), "[", 2)
df_google$Year <- sapply(strsplit(as.character(df_google$Date),'-'), "[", 1)
df_google$Year <- as.double(df_google$Year)
# figure out loop to summarize data based on year for comparative graph
# n <- 2004
# while (n < 2018) {
#  filter(df_google, df_google$Year == n);
#  summarise_each(df_google$Year, funs(mean));
#  n <- n + 1;
#}
## Graph rise of quinoa
ggplot() +
geom_line(data = df_export_bolivia,
aes(x = Year,
y = Value,
color = 'Bolivia')) +
geom_line(data = df_export_peru,
aes(x = Year,
y = Value,
color = 'Peru')) +
ggtitle("Quinoa Exports in Peru & Bolivia") +
xlab("Quinoa Exports in Tonnes") +
ylab("Year")
ggsave(filename = "export_volume.pdf", width = 10, height = 7.5)
ggplot() +
geom_line(data = df_export_bolivia,
aes(x = Year,
y = Value,
color = 'Bolivia')) +
geom_line(data = df_export_peru,
aes(x = Year,
y = Value,
color = 'Peru')) +
ggtitle("Peru & Bolivia Quinoa Exports") +
xlab("Quinoa Exports in Tonnes") +
ylab("Year")
ggplot() +
geom_line(data = df_export_bolivia,
aes(x = Year,
y = Value,
color = 'Bolivia')) +
geom_line(data = df_export_peru,
aes(x = Year,
y = Value,
color = 'Peru')) +
ggtitle("Peru & Bolivia Quinoa Exports") +
xlab("Year") +
ylab("Quinoa Exports in Tonnes")
setwd("/Users/lillianzhao/Documents/Data Science/quinoa")
rm(list = ls())
library(tidyverse)
library(plotly)
library(reshape2)
library(stringr)
## Import files
df_export <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/FAOSTAT_data_10-31-2017-2.csv", header=TRUE, sep=",")
df_google <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/google_trends.csv", header=TRUE, sep=",")
df_google2 <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/what_is_google_trends.csv", header=TRUE, sep=",")
## Separate exportation volume data into countries
df_export_bolivia <- filter(df_export, Area.Code == 19)
df_export_bolivia
df_export_peru <- filter(df_export, Area.Code == 170)
df_export_peru
## Clean google data search by splitting the date into month & year
df_google["Year"] <- NA
df_google["Date"] <- df_google$Month
df_google$Month <- sapply(strsplit(as.character(df_google$Date),'-'), "[", 2)
df_google$Year <- sapply(strsplit(as.character(df_google$Date),'-'), "[", 1)
df_google$Year <- as.double(df_google$Year)
# figure out loop to summarize data based on year for comparative graph
# n <- 2004
# while (n < 2018) {
#  filter(df_google, df_google$Year == n);
#  summarise_each(df_google$Year, funs(mean));
#  n <- n + 1;
#}
## Graph rise of quinoa
ggplot() +
geom_line(data = df_export_bolivia,
aes(x = Year,
y = Value,
country = 'Bolivia')) +
geom_line(data = df_export_peru,
aes(x = Year,
y = Value,
color = 'Peru')) +
ggtitle("Peru & Bolivia Quinoa Exports") +
xlab("Year") +
ylab("Quinoa Exports in Tonnes")
ggsave(filename = "export_volume.pdf", width = 10, height = 7.5)
setwd("/Users/lillianzhao/Documents/Data Science/quinoa")
rm(list = ls())
library(tidyverse)
library(plotly)
library(reshape2)
library(stringr)
## Import files
df_export <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/FAOSTAT_data_10-31-2017-2.csv", header=TRUE, sep=",")
df_google <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/google_trends.csv", header=TRUE, sep=",")
df_google2 <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/what_is_google_trends.csv", header=TRUE, sep=",")
## Separate exportation volume data into countries
df_export_bolivia <- filter(df_export, Area.Code == 19)
df_export_bolivia
df_export_peru <- filter(df_export, Area.Code == 170)
df_export_peru
## Clean google data search by splitting the date into month & year
df_google["Year"] <- NA
df_google["Date"] <- df_google$Month
df_google$Month <- sapply(strsplit(as.character(df_google$Date),'-'), "[", 2)
df_google$Year <- sapply(strsplit(as.character(df_google$Date),'-'), "[", 1)
df_google$Year <- as.double(df_google$Year)
# figure out loop to summarize data based on year for comparative graph
# n <- 2004
# while (n < 2018) {
#  filter(df_google, df_google$Year == n);
#  summarise_each(df_google$Year, funs(mean));
#  n <- n + 1;
#}
## Graph rise of quinoa
ggplot() +
geom_line(data = df_export_bolivia,
aes(x = Year,
y = Value,
country = 'Bolivia')) +
geom_line(data = df_export_peru,
aes(x = Year,
y = Value,
country = 'Peru')) +
ggtitle("Peru & Bolivia Quinoa Exports") +
xlab("Year") +
ylab("Quinoa Exports in Tonnes")
ggsave(filename = "export_volume.pdf", width = 10, height = 7.5)
## Graph rise of quinoa
ggplot() +
geom_line(data = df_export_bolivia,
aes(x = Year,
y = Value,
color = 'Bolivia')) +
geom_line(data = df_export_peru,
aes(x = Year,
y = Value,
color = 'Peru')) +
ggtitle("Peru & Bolivia Quinoa Exports") +
xlab("Year") +
ylab("Quinoa Exports in Tonnes") +
+labs(colour="Country")
ggplot() +
geom_line(data = df_export_bolivia,
aes(x = Year,
y = Value,
color = 'Bolivia')) +
geom_line(data = df_export_peru,
aes(x = Year,
y = Value,
color = 'Peru')) +
ggtitle("Peru & Bolivia Quinoa Exports") +
labs(x = "Year",
y = "Quinoa Exports in Tonnes",
colour="Country")
setwd("/Users/lillianzhao/Documents/Data Science/quinoa")
rm(list = ls())
library(tidyverse)
library(plotly)
library(reshape2)
library(stringr)
## Import files
df_export <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/FAOSTAT_data_10-31-2017-2.csv", header=TRUE, sep=",")
df_google <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/google_trends.csv", header=TRUE, sep=",")
df_google2 <- read.csv(file="/Users/lillianzhao/Documents/Data Science/quinoa/what_is_google_trends.csv", header=TRUE, sep=",")
## Separate exportation volume data into countries
df_export_bolivia <- filter(df_export, Area.Code == 19)
df_export_bolivia
df_export_peru <- filter(df_export, Area.Code == 170)
df_export_peru
## Clean google data search by splitting the date into month & year
df_google["Year"] <- NA
df_google["Date"] <- df_google$Month
df_google$Month <- sapply(strsplit(as.character(df_google$Date),'-'), "[", 2)
df_google$Year <- sapply(strsplit(as.character(df_google$Date),'-'), "[", 1)
df_google$Year <- as.double(df_google$Year)
# figure out loop to summarize data based on year for comparative graph
# n <- 2004
# while (n < 2018) {
#  filter(df_google, df_google$Year == n);
#  summarise_each(df_google$Year, funs(mean));
#  n <- n + 1;
#}
## Graph rise of quinoa
ggplot() +
geom_line(data = df_export_bolivia,
aes(x = Year,
y = Value,
color = 'Bolivia')) +
geom_line(data = df_export_peru,
aes(x = Year,
y = Value,
color = 'Peru')) +
ggtitle("Peru & Bolivia Quinoa Exports") +
labs(x = "Year",
y = "Quinoa Exports in Tonnes",
colour="Country")
ggsave(filename = "export_volume.pdf", width = 10, height = 7.5)
